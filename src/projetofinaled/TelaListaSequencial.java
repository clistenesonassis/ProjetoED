/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetofinaled;

import ListaSequencial.ListaSequencial;
import PacoteCanvas.Canvas;
import PacoteCanvas.Retangulo;
import javax.swing.JOptionPane;
import java.util.ArrayList;

/**
 *
 * @author Lincon
 */
public class TelaListaSequencial extends javax.swing.JFrame {

    private Retangulo retangulo;
    private Canvas canvas;
    private ListaSequencial listaSequencial;
    int x = 0, y = 100;
    boolean cFim = false;
    
    public TelaListaSequencial() {
        initComponents();
        canvas = new Canvas();
        canvas.setBounds(HEIGHT+10, WIDTH, 938, 525);
        this.add(canvas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblTamanho = new javax.swing.JLabel();
        lblInicio = new javax.swing.JLabel();
        lblElemRemovido = new javax.swing.JLabel();
        removerDaLista = new javax.swing.JButton();
        buscarNaLista = new javax.swing.JButton();
        inserirNaLista = new javax.swing.JButton();
        criarListaSequencial = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Informação da fila"));

        lblTamanho.setText("Tamanho: ");

        lblInicio.setText("Tamanho Total: ");

        lblElemRemovido.setText("Elemento Removido: ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTamanho)
                    .addComponent(lblInicio)
                    .addComponent(lblElemRemovido))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTamanho)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblInicio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblElemRemovido)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        removerDaLista.setText("Remover da Lista");
        removerDaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerDaListaActionPerformed(evt);
            }
        });

        buscarNaLista.setText("Buscar na Lista");
        buscarNaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarNaListaActionPerformed(evt);
            }
        });

        inserirNaLista.setText("Inserir na Lista");
        inserirNaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirNaListaActionPerformed(evt);
            }
        });

        criarListaSequencial.setText("Criar Lista Sequencial");
        criarListaSequencial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarListaSequencialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inserirNaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(criarListaSequencial, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removerDaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarNaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(criarListaSequencial, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removerDaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inserirNaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarNaLista, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(390, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void removerDaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerDaListaActionPerformed
        if (!listaSequencial.vazia() || canvas.p.size()>0) {
                int pos = Integer.parseInt(JOptionPane.showInputDialog("Qual a posição do elemento a ser removido?"));
                boolean teste = false;
                
                
                
                int dif = canvas.procurarElementoLS(canvas.getGraphics(), 
                    pos, listaSequencial.tamanhoTotal());
                
                teste = canvas.ajustarRemover(canvas.getGraphics(), pos, listaSequencial.tamanhoTotal(), dif);
                                
                if(teste == false){
                    JOptionPane.showMessageDialog(rootPane, "Elemento não encontrado.");
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Elemento removido com sucesso.");
                    
                    cFim = false;
                    
                    int aux = listaSequencial.remove(pos);
                    
                    lblInicio.setText("Tamanho Total: " + listaSequencial.tamanhoTotal());

                    //printando no label o tamanho:
                    lblTamanho.setText("Tamanho: " + listaSequencial.tamanho());

                    //printando o label elemento removido;
                    lblElemRemovido.setText("Elemento Removido: " + aux);
                }
                canvas.paintListaSequencial(canvas.getGraphics());
            } else {
                JOptionPane.showMessageDialog(null, "A lista está vazia." + canvas.p.size(), "ERRO AO REMOVER ELEMENTO", JOptionPane.ERROR_MESSAGE);
            }


    }//GEN-LAST:event_removerDaListaActionPerformed

    private void buscarNaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarNaListaActionPerformed
            if (!listaSequencial.vazia()) {
                int aux = (Integer.parseInt(JOptionPane.showInputDialog("Digite a posição do elemento?")));
                if(aux <= 0){
                    
                    JOptionPane.showMessageDialog(null, "O valor digitado é inválido.", "BUSCA LISTA SEQUENCIAL",
                            JOptionPane.ERROR_MESSAGE);
                }else{
                    boolean teste = false;
                   for(int i = 0; i < canvas.p.size(); i++){
                    if(canvas.p.get(i).id == aux){
                        
                        JOptionPane.showMessageDialog(rootPane, "Elemento pesquisado: " + aux + "\nValor do elemento: " +
                            canvas.p.get(i).valor, "BUSCA LISTA SEQUENCIAL", JOptionPane.INFORMATION_MESSAGE);
                        
                        teste = true;
                        }
                    }
                   if(teste == false){
                       JOptionPane.showMessageDialog(rootPane, "Elemento não encontrado.", "BUSCA LISTA SEQUENCIAL",
                               JOptionPane.ERROR_MESSAGE);
                   }
                }
            } else {
                JOptionPane.showMessageDialog(null, "A lista está vazia.", "CONSULTA ELEMENTO", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_buscarNaListaActionPerformed

    private void inserirNaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirNaListaActionPerformed
            int pos;
            pos = Integer.parseInt(JOptionPane.showInputDialog("Posição do elemento:"));
                       
            int dif = canvas.procurarElementoLS(canvas.getGraphics(), 
                pos, listaSequencial.tamanhoTotal());
                       
            int esq = canvas.procurarElementoLS(canvas.getGraphics(), 
                pos - 1, listaSequencial.tamanhoTotal());
            
                if( (listaSequencial.tamanhoTotal() >= 0) && (pos < listaSequencial.tamanhoTotal()) && pos > 0
                        && pos+dif <= listaSequencial.tamanhoTotal() && listaSequencial.tamanho() < listaSequencial.tamanhoTotal()){
            
                    retangulo = new Retangulo();
                    
                    int elem;
                    elem = Integer.parseInt(JOptionPane.showInputDialog("Qual valor deseja adicionar?")); 
                    
                    listaSequencial.insere(pos, elem);
                    x = (70 * (pos - 1));
                    retangulo.setCoordX(x);
                    retangulo.setCoordY(y);
                    retangulo.setValor(String.valueOf(elem));
                    retangulo.setId(pos);
                    canvas.adicionar(retangulo);

                    canvas.ajustarInserir(canvas.getGraphics(), pos, listaSequencial.tamanhoTotal(), dif);
                    
                    canvas.paintListaSequencial(canvas.getGraphics());

                }else{
                    if (pos == listaSequencial.tamanhoTotal() && cFim == false && listaSequencial.tamanho() < listaSequencial.tamanhoTotal()) {
                        
                        listaSequencial.insereFinal(Integer.parseInt(JOptionPane.showInputDialog("Qual valor "
                            + "deseja adicionar no fim da lista?")));
                        
                        x = (70 * (pos - 1));
                        retangulo = new Retangulo();
                        retangulo.setCoordX(x);
                        retangulo.setCoordY(y);
                        retangulo.setValor(String.valueOf(listaSequencial.elemento(listaSequencial.tamanho())));
                        retangulo.setId(pos);
                        canvas.adicionar(retangulo);
                        canvas.paintListaSequencial(canvas.getGraphics());
                        
                        cFim = true;
                    } else {
                        if(listaSequencial.cheia()){
                            JOptionPane.showMessageDialog(null, "Lista cheia!", "Falha na inserção do Elemento", JOptionPane.ERROR_MESSAGE);
                        }else{
                            JOptionPane.showMessageDialog(null, "Valor inválido!", "Falha na inserção do Elemento", JOptionPane.ERROR_MESSAGE);
                        }
                        
                    }
                }

            //printando no label o tamanho da fila;
            lblTamanho.setText(String.valueOf("Tamanho Atual: " + canvas.p.size()));

            //printando no label o Inicio da fila;
            lblInicio.setText(String.valueOf("Tamanho Total: " + listaSequencial.tamanhoTotal()));

            //printando o label elemento removido;
            lblElemRemovido.setText("Elemento Removido: null");
    }//GEN-LAST:event_inserirNaListaActionPerformed

    private void criarListaSequencialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarListaSequencialActionPerformed
        //se a estrutura estiver vázia lancará uma mensagem de erro;
        if (canvas.Tamanho() == 0) {
            // instanciando a fila;
            listaSequencial = new ListaSequencial(Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Digite o tamanho da lista: ")));

            //printando no label o tamanho:
            lblTamanho.setText("Tamanho Atual: " + listaSequencial.tamanho());

            //printando no label inicio da fila;
            lblInicio.setText(String.valueOf("Tamanho Total: " + listaSequencial.tamanhoTotal()));

            //printando o label elemento removido;
            lblElemRemovido.setText("Elemento Removido: null");

            //passando posição que começará a fila;
            x = 0;
            y = 200;


        } else {
            //exibe uma mensagem de erro;
            JOptionPane.showMessageDialog(null, "Uma estrutura já foi criada. Remova todos os elementos"
                + " da estrutura para criar outra !", "CRIAR LISTA SEQUENCIAL", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_criarListaSequencialActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaListaSequencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaListaSequencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaListaSequencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaListaSequencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaListaSequencial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarNaLista;
    private javax.swing.JButton criarListaSequencial;
    private javax.swing.JButton inserirNaLista;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblElemRemovido;
    private javax.swing.JLabel lblInicio;
    private javax.swing.JLabel lblTamanho;
    private javax.swing.JButton removerDaLista;
    // End of variables declaration//GEN-END:variables
}
